import java.util.ArrayList;
import java.util.Scanner;

public class HospitalManagementSystem {
    static class Patient {
        int id;
        String name;
        int age;
        String disease;

        Patient(int id, String name, int age, String disease) {
            this.id = id;
            this.name = name;
            this.age = age;
            this.disease = disease;
        }

        void display() {
            System.out.println("Patient ID: " + id);
            System.out.println("Name: " + name);
            System.out.println("Age: " + age);
            System.out.println("Disease: " + disease);
        }
    }

    static class Doctor {
        int id;
        String name;
        String specialization;

        Doctor(int id, String name, String specialization) {
            this.id = id;
            this.name = name;
            this.specialization = specialization;
        }

        void display() {
            System.out.println("Doctor ID: " + id);
            System.out.println("Name: " + name);
            System.out.println("Specialization: " + specialization);
        }
    }

    static ArrayList<Patient> patients = new ArrayList<>();
    static ArrayList<Doctor> doctors = new ArrayList<>();
    static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n=== Hospital Management System ===");
            System.out.println("1. Add Patient");
            System.out.println("2. View Patients");
            System.out.println("3. Add Doctor");
            System.out.println("4. View Doctors");
            System.out.println("5. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    addPatient();
                    break;
                case 2:
                    viewPatients();
                    break;
                case 3:
                    addDoctor();
                    break;
                case 4:
                    viewDoctors();
                    break;
                case 5:
                    System.out.println("Exiting the system. Goodbye!");
                    return;
                default:
                    System.out.println("Invalid choice. Try again.");
            }
        }
    }

    // Add a new patient
    static void addPatient() {
        System.out.print("Enter Patient ID: ");
        int id = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        System.out.print("Enter Patient Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter Patient Age: ");
        int age = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        System.out.print("Enter Disease: ");
        String disease = scanner.nextLine();

        patients.add(new Patient(id, name, age, disease));
        System.out.println("Patient added successfully!");
    }

    // View all patients
    static void viewPatients() {
        if (patients.isEmpty()) {
            System.out.println("No patients found!");
        } else {
            System.out.println("\n=== Patient List ===");
            for (Patient p : patients) {
                p.display();
                System.out.println("--------------------");
            }
        }
    }

    // Add a new doctor
    static void addDoctor() {
        System.out.print("Enter Doctor ID: ");
        int id = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        System.out.print("Enter Doctor Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter Specialization: ");
        String specialization = scanner.nextLine();

        doctors.add(new Doctor(id, name, specialization));
        System.out.println("Doctor added successfully!");
    }

    // View all doctors
    static void viewDoctors() {
        if (doctors.isEmpty()) {
            System.out.println("No doctors found!");
        } else {
            System.out.println("\n=== Doctor List ===");
            for (Doctor d : doctors) {
                d.display();
                System.out.println("--------------------");
            }
        }
    }
}
